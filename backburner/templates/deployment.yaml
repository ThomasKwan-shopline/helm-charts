{{ range .Values.workers }}
{{ $resourceName := .name }}
{{ $worker := merge . $.Values.global (dict "resourceName" $resourceName) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.name }}-{{ $resourceName }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $.Values.name }}-{{ $resourceName }}
spec:
  strategy:
  {{- if (default .standAlone false ) }}
    type: Recreate
  {{- else}}
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  {{- end}}
  selector:
    matchLabels:
      app: {{ $.Values.name }}-{{ $resourceName }}
  template:
    metadata:
      {{- if .annotations }}
      annotations:
        {{- toYaml .annotations | nindent 8 }}
      {{- end }}
      labels:
        app: {{ $.Values.name }}-{{ $resourceName }}
    spec:
      containers:
      - {{ template "deployment.container" $worker }}
      restartPolicy: Always
      {{- if $.Values.serviceaccount}}
      serviceAccountName: {{ $.Values.name }}-pod-service-account
      {{- end }}
      dnsConfig:
        options:
          - name: ndots
            value: "2"
      terminationGracePeriodSeconds: 61
      {{- if $.Values.global.affinity }}
      affinity: {{ toYaml $.Values.global.affinity | nindent 8 }}
      {{- end }}
---
{{- end }}