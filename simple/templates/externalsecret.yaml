{{- range $secret_name, $ref := .Values.externalSecrets }}
{{- if (($ref.secretStore).aws).arn }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $secret_name }}-secretstore
  annotations:
    eks.amazonaws.com/role-arn: {{ (($ref.secretStore).aws).arn }}
{{- end }}
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ $secret_name }}
spec:
  provider:
    aws:
      service: SecretsManager
      region: {{ (($ref.secretStore).aws).region | default "ap-southeast-1" }}
      auth:
        jwt:
          serviceAccountRef:
            {{- if (($ref.secretStore).aws).arn }}
            name: {{ $secret_name }}-secretstore
            {{- else }}
            name: {{ ($.Values.serviceaccount).name | default (printf "%s-pod-service-account" $.Values.name) }}
            {{- end }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $secret_name }}
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install,pre-rollback
    "helm.sh/hook-weight": "-1"
spec:
  refreshInterval: {{ (($ref.secretStore).aws).refreshInterval | default "1h" }}
  secretStoreRef:
    name: {{ $secret_name }}
    kind: SecretStore
  target:
    name: eso-{{ $secret_name }}
    creationPolicy: Owner
  dataFrom: {{ toYaml $ref.dataFrom | nindent 2 }}
{{- end }}
